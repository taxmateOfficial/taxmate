{"version":3,"sources":["Banner.jsx","Calc.jsx","App.js","reportWebVitals.js","index.js"],"names":["Banner","Jumbotron","fluid","id","Container","Date","getFullYear","React","Component","Calc","props","state","basic","hra","other","elss","lic","phomeloan","othereightyc","fd","rent","otherded","oldscheme","s1","s2","s3","s4","cess","newscheme","s5","s6","taxstring","localStorage","getItem","taxstate","JSON","parse","this","setState","removeItem","field","value","setItem","stringify","number","n1","n2","num","Number","toFixed","split","replace","getEmployeePF","formatIndian","getEightyCDeductions","getRentDeduction","b","c","Math","min","remaining","slab_range","tax_rate","totaltaxable","getGrossAnnualSalary","slab1","calculateSlabTax","rem1","slab2","rem2","slab3","rem3","slab4","rem4","slab5","rem5","slab6","final","totalrebate","getTotalDeductions","total_tax","gross_annual_salary","employee_pf","old_total_deductions","eightyc","getFormattedEightyCDeductions","old_totaltaxable","new_totaltaxable","new_total_deductions","calculateOldSchemeTax","calculateNewSchemeTax","Row","Col","Form","action","Group","controlId","Label","Control","type","placeholder","onChange","e","update","target","onWheel","blur","Text","className","disabled","align","Table","striped","bordered","hover","size","colSpan","totaltax","App","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b8803cb.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n\nclass Banner extends React.Component \n{\n    render() \n    {\n        return (\n            <Jumbotron fluid id=\"jumbo\">\n            <Container>\n              <h1>Lazy Tax</h1>\n              <p>Tax calculator - because you're bad at math</p>\n              <i>FY 2023 - 2024</i>\n            </Container>\n            <span id=\"myname\">- Aravind Balaji, {new Date().getFullYear()}</span>\n          </Jumbotron>\n        )\n    }\n  }\n\n  export default Banner","import React from 'react';\nimport Banner from './Banner';\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\n\nclass Calc extends React.Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            basic : 0,\n            hra : 0,\n            other : 0,\n            elss : 0,\n            lic : 0,\n            phomeloan : 0,\n            othereightyc : 0,\n            fd : 0,\n            rent : 0,\n            otherded : 0,\n            oldscheme : {\n                s1 : 0,\n                s2 : 0,\n                s3 : 0,\n                s4 : 0,\n                cess : 0\n            },\n            newscheme : {\n                s1 : 0,\n                s2 : 0,\n                s3 : 0,\n                s4 : 0,\n                s5 : 0,\n                s6 : 0,\n                cess : 0\n            }\n        }\n    }\n\n    componentDidMount()\n    {\n        let taxstring = localStorage.getItem(\"com.rvnd.lazytax:taxstate\");\n        if(taxstring!=null)\n        {\n            let taxstate = JSON.parse(taxstring);\n            this.setState(\n                {\n                    ...taxstate,\n                });\n        }\n        else localStorage.removeItem(\"com.rvnd.lazytax:taxstate\");\n    }\n\n    update(field, value) {\n        this.setState(\n            {\n                ...this.state,\n                [field]: value\n            });\n        localStorage.setItem(\"com.rvnd.lazytax:taxstate\",JSON.stringify({\n            ...this.state,\n            [field]: value\n        }));\n\n    }\n\n    formatIndian(number)\n    {\n        number = Number(number);\n        number = number.toFixed(2);\n        var n1, n2;\n        let num = number + '' || '';\n        // works for integer and floating as well\n        n1 = num.split('.');\n        n2 = n1[1] || null;\n        n1 = n1[0].replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\");\n        num = n2 ? n1 + '.' + n2 : n1;\n        return num;\n    }\n\n    getGrossAnnualSalary()\n    {\n        //return <h5>Annual Gross Salary :<b>₹ {this.formatIndian(Number(this.state.basic) + Number(this.state.hra) + Number(this.state.other))}</b></h5>\n        return Number(this.state.basic) + Number(this.state.hra) + Number(this.state.other);\n    }\n\n    getEightyCDeductions()\n    {\n        let num =  Number(this.getEmployeePF() + Number(this.state.elss) + Number(this.state.lic) + Number(this.state.phomeloan) + Number(this.state.othereightyc) + Number(this.state.fd));\n        if(num >= 150000) return Number(150000);\n        return num;\n    }\n\n    getFormattedEightyCDeductions()\n    {\n        return <h5>Total 80C Deductions :<b>₹ {this.formatIndian(this.getEightyCDeductions()) + \" of \" + this.formatIndian(150000)}</b></h5> \n    }\n\n    getTotalDeductions()\n    {\n        //Standard deduction + Prof Tax\n        let deduction = 50000 + 2400 + this.getEightyCDeductions() + this.getRentDeduction() + Number(this.state.otherded);\n        return deduction;\n    }\n\n    getRentDeduction()\n    {\n        if(this.state.rent===0) return 0;\n        let b = (50.0/100.0) * Number(this.state.basic);\n        let c = Number(this.state.rent) - ((10.0/100.0) * Number(this.state.basic))\n        let ded =  Number(Math.min(this.state.hra, b, c));\n        return ded;\n    }\n\n    getEmployeePF()\n    {\n        return Number((12.0/100.0) * this.state.basic);\n    }\n    \n    calculateSlabTax(remaining, slab_range, tax_rate)\n    {\n       if(remaining > slab_range) return slab_range * (tax_rate/100.0);\n       else return remaining * (tax_rate/100.0);\n    }\n\n    calculateNewSchemeTax()\n    {\n        let totaltaxable = this.getGrossAnnualSalary();\n    \n         //Tax rebate if totaltaxable is 7L or less\n         if(totaltaxable <= 700000) totaltaxable = 0\n\n        //Standard Deduction of 50,000\n        totaltaxable = totaltaxable - 50000.0\n\n        let slab1 = this.calculateSlabTax(totaltaxable, 300000, 0);\n        let rem1 = totaltaxable - 300000;\n        if(rem1 <=0) rem1 = 0;\n\n        let slab2 = this.calculateSlabTax(rem1,300000, 5);\n        let rem2 = rem1 - 300000;\n        if(rem2 <=0) rem2 = 0;\n\n        let slab3= this.calculateSlabTax(rem2,300000, 10);\n        let rem3 = rem2 - 300000;\n        if(rem3 <=0) rem3 = 0;\n\n        let slab4= this.calculateSlabTax(rem3,300000, 15);\n        let rem4 = rem3 - 300000;\n        if(rem4 <=0) rem4 = 0;\n\n        let slab5= this.calculateSlabTax(rem4,300000, 20);\n        let rem5 = rem4 - 300000;\n        if(rem5 <=0) rem5 = 0;\n\n        let slab6 = this.calculateSlabTax(rem5, rem5, 30);\n        let cess = (4.0/100.0) * (slab1 + slab2 + slab3 + slab4 + slab5 + slab6);\n        let final = {\n            's1' : Number(slab1),\n            's2' : Number(slab2),\n            's3' : Number(slab3),\n            's4' : Number(slab4),\n            's5' : Number(slab5),\n            's6' : Number(slab6),\n            'cess' : Number(cess),\n            'totaltax' : Number(slab1 + slab2 + slab3 + slab4 + slab5 + slab6 + cess)\n        }\n\n        let oldie = JSON.stringify(this.state.newscheme);\n        let finaly = JSON.stringify(final);\n        \n        if(oldie!==finaly)\n        {\n            this.setState(\n                {\n                    ...this.state,\n                    'newscheme' : final\n                });\n        }\n    }\n\n    calculateOldSchemeTax()\n    {\n        let totalrebate = 0;\n        let totaltaxable = this.getGrossAnnualSalary() - this.getTotalDeductions();\n\n        //Tax rebate upto 12,500 if taxable income is less than or equal 5L\n        if(totaltaxable <= 500000) totalrebate = totalrebate + 12500\n\n        if(totaltaxable <=0) totaltaxable = 0\n        let slab1 = this.calculateSlabTax(totaltaxable, 250000, 0);\n        let rem1 = totaltaxable - 250000;\n        if(rem1 <=0) rem1 = 0;\n\n        let slab2 = this.calculateSlabTax(rem1,250000, 5);\n        let rem2 = rem1 - 250000;\n        if(rem2 <=0) rem2 = 0;\n\n        let slab3= this.calculateSlabTax(rem2,500000, 20);\n        let rem3 = rem2 - 500000;\n        if(rem3 <=0) rem3 = 0;\n\n        let slab4 = this.calculateSlabTax(rem3, rem3, 30);\n        let total_tax = (slab1 + slab2 + slab3 + slab4) - totalrebate;\n        if(total_tax <= 0) total_tax = 0\n        let cess = (4.0/100.0) * total_tax;\n        let final = {\n            's1' : Number(slab1),\n            's2' : Number(slab2),\n            's3' : Number(slab3),\n            's4' : Number(slab4),\n            'cess' : Number(cess),\n            'totaltax' : Number(total_tax + cess)\n        }\n        let oldie = JSON.stringify(this.state.oldscheme);\n        let finaly = JSON.stringify(final);\n        \n        if(oldie!==finaly)\n        {\n            this.setState(\n                {\n                    ...this.state,\n                    'oldscheme' : final\n                });\n        }\n    }\n\n    render() \n    {\n        \n        let gross_annual_salary = <h5>Annual Gross Salary :<b>₹ {this.formatIndian(Number(this.getGrossAnnualSalary()))}</b></h5>;\n        let employee_pf = this.getEmployeePF();\n        let old_total_deductions = <h5>Total Deductions : <b>₹ {this.formatIndian(Number(this.getTotalDeductions()))}</b></h5> \n        let eightyc = this.getFormattedEightyCDeductions();\n        let old_totaltaxable = <h5><b>Total Taxable Income : ₹ {this.formatIndian(Number(this.getGrossAnnualSalary() - this.getTotalDeductions()))}</b></h5>;\n        let new_totaltaxable = <h5><b>Total Taxable Income : ₹ {this.formatIndian(Number(this.getGrossAnnualSalary()))}</b></h5>;\n        let new_total_deductions = <h5>Total Deductions : <b>₹ {this.formatIndian(Number(50000))}</b></h5> \n\n        this.calculateOldSchemeTax();\n        this.calculateNewSchemeTax();\n        return (\n            <div>\n                <Banner></Banner>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Form action=\"#\">\n                                <Form.Group controlId=\"basicSalary\">\n                                    <Form.Label>Basic Salary</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Annual Basic Salary\" value={this.state.basic} onChange={(e)=> {this.update('basic',e.target.value); }} onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Your annual basic salary</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"hra\">\n                                    <Form.Label>Housing Allowance</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Annual HRA\" value={this.state.hra} onChange={(e)=> {this.update('hra',e.target.value)}} onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Annual HRA your company provides</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"otherAllowance\">\n                                    <Form.Label>Other Allowances/Bonuses</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Other allowances\" value={this.state.other} onChange={(e)=> {this.update('other',e.target.value)}}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Add up your other allowances/bonuses provided annually</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col>{gross_annual_salary}</Col>\n                    </Row>\n                </Container>\n                <br/><br/> \n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"Employee PF\">\n                                    <Form.Label>Employee PF (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={employee_pf} disabled/>\n                                    <Form.Text className=\"text-muted\">Employee PF (12% of BASIC)</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"ELSS\">\n                                    <Form.Label>ELSS Funds (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.elss} onChange={(e)=>this.update('elss',e.target.value)}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Total invested amount for the year</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"lic\">\n                                    <Form.Label>Life Insurance (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.lic} onChange={(e)=>this.update('lic',e.target.value)}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Total insurance premium paid for the year</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"pghomeloan\">\n                                    <Form.Label>Principal Home Loan(80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.phomeloan} onChange={(e)=>this.update('phomeloan',e.target.value)}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Principal portion of the EMI paid for home loan</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"fd\">\n                                    <Form.Label>Tax-Saving FD (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.fd} onChange={(e)=>this.update('fd',e.target.value)}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Total investment in Tax Saving FD for 5y</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"other\">\n                                    <Form.Label>Other 80C Deductions</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.othereightyc}  onChange={(e)=>this.update('othereightyc',e.target.value)}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Total investment in other 80c deductions not declared here</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col>{eightyc}</Col>\n                    </Row>\n                    <br/><br/>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"stdded\">\n                                    <Form.Label>Standard Deduction</Form.Label>\n                                    <Form.Control type=\"number\" value=\"50000\" disabled/>\n                                    <Form.Text className=\"text-muted\">Standard deduction offered </Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"proftax\">\n                                    <Form.Label>Professional Tax</Form.Label>\n                                    <Form.Control type=\"number\" value=\"2400\" disabled/>\n                                    <Form.Text className=\"text-muted\">Professional Tax (200 per month) </Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"rent\">\n                                    <Form.Label>House Rent (10 - 13A)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.rent} onChange={(e)=>this.update('rent',e.target.value)}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Yearly rent (Non-metro). Specifiy 0 if not in rented house</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"otherded\">\n                                    <Form.Label>Other Deductions</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.otherded} onChange={(e)=>this.update('otherded',e.target.value)}  onWheel={(e) => e.target.blur()}/>\n                                    <Form.Text className=\"text-muted\">Ex. Meal coupons or ANY other deduction</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <br/>\n                </Container>\n                \n                <br/><br/>\n                <hr/>\n                <Container fluid>\n                <h5 align=\"left\">Tax Calculation (Old Regime)</h5> \n                    {old_totaltaxable}\n                    {old_total_deductions}\n                    <br/>\n                    <Row>\n                        <Table striped bordered hover size=\"sm\">\n                            <thead>\n                                <tr>\n                                <th>Slab</th>\n                                <th>Tax Rate</th>\n                                <th>Tax Payable</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>0 to ₹2,50,000</td>\n                                    <td>0%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s1)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹2,50,001 to ₹5,00,000\t</td>\n                                    <td>5%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s2)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹5,00,001 to ₹10,00,000</td>\n                                    <td>20%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s3)}</td>\n                                </tr>\n                                <tr>\n                                    <td>Above ₹10,00,000</td>\n                                    <td>30%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s4)}</td>\n                                </tr>\n                                <tr>\n                                    <td>Cess</td>\n                                    <td>4% on Tax</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.cess)}</td>\n                                </tr>\n                                <tr>\n                                    <th colSpan=\"2\">TOTAL TAX TO BE PAID THIS YEAR</th>\n                                    <th>₹ {this.formatIndian(this.state.oldscheme.totaltax)}</th>\n                                </tr>\n                                <tr>\n                                    <th colSpan=\"2\">TOTAL TAX TO BE PAID PER MONTH</th>\n                                    <th>₹ {this.formatIndian(this.state.oldscheme.totaltax/12)}</th>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Row>\n                </Container>\n                <br/><br/>\n                <Container fluid>\n                <h5 align=\"left\">Tax Calculation (New Regime)</h5> \n                {new_totaltaxable}\n                {new_total_deductions}\n                    <br/>\n                    <Row>\n                        <Table striped bordered hover size=\"sm\">\n                            <thead>\n                                <tr>\n                                <th>Slab</th>\n                                <th>Tax Rate</th>\n                                <th>Tax Payable</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>0 to ₹3,00,000</td>\n                                    <td>0%</td>\n                                    <td>₹ {this.formatIndian(this.state.newscheme.s1)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹3,00,000 to ₹6,00,000\t</td>\n                                    <td>5%</td>\n                                    <td>₹ {this.formatIndian(this.state.newscheme.s2)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹6,00,001 to ₹9,00,000</td>\n                                    <td>10%</td>\n                                    <td>₹ {this.formatIndian(this.state.newscheme.s3)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹9,00,001 to ₹12,00,000</td>\n                                    <td>15%</td>\n                                    <td>₹ {this.formatIndian(this.state.newscheme.s4)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹12,00,001 to ₹15,00,000</td>\n                                    <td>20%</td>\n                                    <td>₹ {this.formatIndian(this.state.newscheme.s5)}</td>\n                                </tr>\n                                <tr>\n                                    <td>Above ₹15,00,000</td>\n                                    <td>30%</td>\n                                    <td>₹ {this.formatIndian(this.state.newscheme.s6)}</td>\n                                </tr>\n                                <tr>\n                                    <td>Cess</td>\n                                    <td>4% on Tax</td>\n                                    <td>₹ {this.formatIndian(this.state.newscheme.cess)}</td>\n                                </tr>\n                                <tr>\n                                    <th colSpan=\"2\">TOTAL TAX TO BE PAID THIS YEAR</th>\n                                    <th>₹ {this.formatIndian(this.state.newscheme.totaltax)}</th>\n                                </tr>\n                                <tr>\n                                    <th colSpan=\"2\">TOTAL TAX TO BE PAID PER MONTH</th>\n                                    <th>₹ {this.formatIndian(this.state.newscheme.totaltax/12)}</th>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Row>\n                </Container>\n                <br /><br />\n            </div>\n        )\n    }\n  }\n\n  export default Calc","import './App.css';\nimport Calc from './Calc'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  document.title = \"Lazy Tax - Calculator\";\n  return (\n    <div className=\"App\">\n     <Calc></Calc>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}